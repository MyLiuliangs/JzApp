package com.suda.jzapp.dao.greendao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.suda.jzapp.dao.greendao.Account;
import com.suda.jzapp.dao.greendao.Record;
import com.suda.jzapp.dao.greendao.AccountType;
import com.suda.jzapp.dao.greendao.RecordType;

import com.suda.jzapp.dao.greendao.AccountDao;
import com.suda.jzapp.dao.greendao.RecordDao;
import com.suda.jzapp.dao.greendao.AccountTypeDao;
import com.suda.jzapp.dao.greendao.RecordTypeDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig accountDaoConfig;
    private final DaoConfig recordDaoConfig;
    private final DaoConfig accountTypeDaoConfig;
    private final DaoConfig recordTypeDaoConfig;

    private final AccountDao accountDao;
    private final RecordDao recordDao;
    private final AccountTypeDao accountTypeDao;
    private final RecordTypeDao recordTypeDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        accountDaoConfig = daoConfigMap.get(AccountDao.class).clone();
        accountDaoConfig.initIdentityScope(type);

        recordDaoConfig = daoConfigMap.get(RecordDao.class).clone();
        recordDaoConfig.initIdentityScope(type);

        accountTypeDaoConfig = daoConfigMap.get(AccountTypeDao.class).clone();
        accountTypeDaoConfig.initIdentityScope(type);

        recordTypeDaoConfig = daoConfigMap.get(RecordTypeDao.class).clone();
        recordTypeDaoConfig.initIdentityScope(type);

        accountDao = new AccountDao(accountDaoConfig, this);
        recordDao = new RecordDao(recordDaoConfig, this);
        accountTypeDao = new AccountTypeDao(accountTypeDaoConfig, this);
        recordTypeDao = new RecordTypeDao(recordTypeDaoConfig, this);

        registerDao(Account.class, accountDao);
        registerDao(Record.class, recordDao);
        registerDao(AccountType.class, accountTypeDao);
        registerDao(RecordType.class, recordTypeDao);
    }
    
    public void clear() {
        accountDaoConfig.getIdentityScope().clear();
        recordDaoConfig.getIdentityScope().clear();
        accountTypeDaoConfig.getIdentityScope().clear();
        recordTypeDaoConfig.getIdentityScope().clear();
    }

    public AccountDao getAccountDao() {
        return accountDao;
    }

    public RecordDao getRecordDao() {
        return recordDao;
    }

    public AccountTypeDao getAccountTypeDao() {
        return accountTypeDao;
    }

    public RecordTypeDao getRecordTypeDao() {
        return recordTypeDao;
    }

}
